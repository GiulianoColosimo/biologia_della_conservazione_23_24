---
title: "Biologia della Conservazione"
subtitle: "Class 6 - Conservation genetics"
date: "2024-04-09"
footer:  "[Biologia della conservazione 23/24 - Giuliano Colosimo, PhD](https://giulianocolosimo.github.io/biologia_della_conservazione_23_24/)"
logo: ../../figures/Tor-Vergata_logo_cmyk.png
format: 
  revealjs:
    width: 1600
    height: 900 
    theme: slides.scss
    multiplex: true
    transition: fade
    slide-number: true
    preview-links: true
    chalkboard: 
      boardmarker-width: 5
editor: visual
from: markdown+emoji
execute:
  freeze: auto
editor_options: 
  chunk_output_type: console
bibliography: /Users/giulianocolosimo/Library/CloudStorage/ProtonDrive-giuliano.colosimo@protonmail.com/manuscripts/literature/bibtex/comprehensive_database.bib
csl: /Users/giulianocolosimo/Library/CloudStorage/ProtonDrive-giuliano.colosimo@protonmail.com/manuscripts/literature/bibtex/apa_5th_edition.csl
citation_package: biblatex
citecolor: "red"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
x <- c("DT", "tidyverse")
lapply(x, require, character.only = T)
rm(x)
```

## Topics

::: columns
::: {.column width="50%"}
1.  [Introduction to conservation biology]{style="color: green;"}
2.  [Biodiversity]{style="color: green;"}
3.  [Biodiversity and extinctions]{style="color: green;"}
4.  [Populations]{style="color: green;"}
5.  [Basics of conservation genetics]{style="color: orange;"}
6.  [Genetic drift]{style="color: blue;"}
7.  [Effective population size]{style="color: blue;"}
8.  [Inbreeding depression]{style="color: blue;"}
9.  [Population structure]{style="color: blue;"}
10. [Hybridization]{style="color: blue;"}
11. [Applying genetic information to conservation]{style="color: blue;"}
:::

::: {.column width="50%"}
12. [Managing genetic diversity in captive populations]{style="color: blue;"}
13. [Managing genetic diversity in the wild]{style="color: blue;"}
14. [Population viability analysis]{style="color: blue;"}
15. [Invasive species]{style="color: blue;"}
16. [CITES and trade regulations of endangered species]{style="color: blue;"}
17. [Conservation and climate change]{style="color: blue;"}
18. [Future climate impacts]{style="color: blue;"}
19. [Conservation economics]{style="color: blue;"}
20. [Conservation technology]{style="color: blue;"}
:::
:::

## Fundamental measures of genetic diversity

-   Polymorphism

$$
P = number\ of\ polymorphic\ loci/total\ number\ of\ loci
$$

-   Allele frequency (for diploid individuals)

$$
p = \frac{2n_{Hom} + n_{Het}}{2n}
$$ where $p$ is the frequency of the allele (usually the dominant one) and $n$ is the number of individuals that are homozygotes ($n_{Hom}$) and heterozygotes ($n_{Het}$) for that allele, respectively

-   Average heterozygosity $H = \sum H_i/N$ where $H_i$ is the average heterozygosity at locus $i$, and $N$ is the total number of loci

------------------------------------------------------------------------

-   Describing the genetic variation using mathematical tool is a good and necessary exercise, but it is not enough!
-   We need to develop models that could tell us about how various evolutionary factors (natural selection, mutations, population size, geographic fragmentation, drift) affect the persistence of populations and species

> Models are essential for understanding the genetics of natural populations in a variety of ways: *i)* models make us define the parameters that need to be considered; *ii)* models allow us to test hypotheses; *iii)* models allow us to generalize results; iv) models allow us to predict how a system will operate in the future [@Allendorf2022, p.95].

-   As a general rule of thumb, models that we develop to understand natural populations should be as simple as possible
    -   Simpler models are easier to reject, and, therefore, are more useful
    -   Simple models are likely to be more general and therefore more applicable to a wider number of situations [@Allendorf2022, p.95]

------------------------------------------------------------------------

## The simpler model: Hardy-Weinberg principle

-   In 1908, Godfrey Harold Hardy (a British mathematician) and Wilhelm Weinberg (a German physician), independently developed a math model describing the dynamics of a diploid, sexually reproducing population

::: columns
::: {.column width="50%"}
![Gregory Harol Hardy, figure from the Wiki page](./hardy.jpg)
:::

::: {.column width="50%"}
![Wilhelm Weinberg, figure from <http://www.esp.org/people/>](./weinberg.jpg)
:::
:::

------------------------------------------------------------------------

-   Hardy-Weinberg model suggests that a population reaches an equilibrium where allele frequencies are constant and there is a specific relation between genotypic and allelic frequencies

. . .

Assumptions of the model:

| Assumption               | Significance                                                                                                                                                                                                  |
|-----------------|-------------------------------------------------------|
| Random mating            | Individuals show no significant preference or dislike for other individuals with respect to specific traits or loci.                                                                                          |
| No mutation              | Mutation is one of the few forces creating variability. We assume that the information is transmitted from generation to generation without the influence of mutation.                                        |
| Infinite population size | No population in nature is actually infinite (although populations of some species may as well be)! This assumption is fundamental to construct a null model and compare the effect of small population size. |

------------------------------------------------------------------------

|                      | (continues)                                                                                                                                                                                                                                                                                                           |
|----------------|--------------------------------------------------------|
| No natural selection | We will assume that all alleles and genotypes have the same fitness and that there is no differential reproduction or survival. This assumption is very unlikely to be true in nature, especially because selection may be reduced for the loci under analysis, but still present at all other loci in an individual. |
| No immigration       | We will first consider a situation where only one population of a certain species is present. This means that we will not consider gene flow and exchange of genetic material from and to other populations.                                                                                                          |

. . .

::: callout-important
# Question

What is the main consequence of the assumptions we have just described?
:::

. . .

::: callout-tip
# Answer

The main outcome of these assumptions is that the population under study is a population that doesn't evolve!
:::

------------------------------------------------------------------------

```{r hwProps, echo=FALSE, fig.cap='Organization of genetic variability in a Hardy-Weinberg equilibrium population typed at a biallelic locus', fig.align='center'}
p <- seq(0, 1, by = 0.1)
q <- 1-p
het <- 2*(p*q)

plot(p^2, type = "b", xaxt = "n", col = "red",
     xlab = "Allele Frequency",
     ylab = "Genotype Frequency", pch = 1)
axis(1, at = 1:length(p), labels = p)
points(q^2, type = "b", col = "blue", pch = 2)
points(het, type = "b", col = "forestgreen", pch = 3)
legend("top",
       legend = c("A1A1", "A1A2", "A2A2"), 
       col = c("red", "forestgreen", "blue"), 
       pch = c(1, 3, 2), horiz = T)
```

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

#### A walk-through example

-   We begin considering a diploid population with n = 15 individuals

![](./population10a.png){fig-align="center"}

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

-   Being diploids each individual has two alleles per locus (A and a)

![](./population10c.png){fig-align="center"}

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

-   Summarizing the information as a table...

| $n_{AA}$ | $n_{Aa}$ | $n_{aa}$ | $n$ |
|----------|----------|----------|-----|
| 6        | 7        | 2        | 15  |

-   ... and estimating the allele frequencies:

$$
p = f(A) = \frac{2n_{AA} + n_{Aa}}{2n} = \frac{12 + 7}{30} \approx 0.633
$$ and

$$
q = f(a) = \frac{2n_{aa} + n_{Aa}}{2n}= \frac{4 + 7}{30} \approx 0.367
$$

-   Since there are only two alleles we can write $p + q = 1$

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

#### Expansion of the Hardy-Weinberg model with multiple alleles

-   In this previous basic example we only had 2 alleles and therefore $p+q=1$.

-   Because of our assumption of random mating the assortment of alleles in the zygotes can be estimated from the allele frequencies using a binomial expansion:

$$
(p+q)^2=p^2+2pq+q^2
$$

-   If we want to add another allele ($A_1, A_2, A_3$)...

$$
(p+q+r)^2=p^2+2pq+q^2+2pr+2qr+r^2
$$

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

-   "All alleles and genotypes have the same fitness with no differential reproduction or survival" and individuals are "mating at random"

-   If this is true, the frequencies of male and female gametes correspond to the allele frequencies and zygotes are formed randomly choosing gametes from the gene pool

![](./genePool.png){fig-align="center"}

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

#### Basic probability theory

-   The probability of two independent events, such as the union of two gametes at random in a zygote, is calculated as the product of the probability of the single events

```{r dice1}
#| output-location: column-fragment
dice <- c(1,2,3,4,5,6)
dice
```

<br/>

```{r dice2}
#| output-location: column-fragment
sample(dice, size = 1)
```

<br/>

```{r dice3}
#| output-location: column-fragment
sample(dice, size = 1)
```

<br/>

```{r dice4}
#| output-location: column-fragment
sim_dice <- sample(dice, size = 100000,
                   replace = T)
table(sim_dice)/100000
```

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

#### Basic probability theory

-   The probability of casting a dice and obtaining one of the six numbers is $\frac{1}{6} \approx 0.16$. The probability of casting the dice twice and obtaining the same number is $\frac{1}{6} * \frac{1}{6} = \frac{1}{36} \approx 0.028$

#### The Punnet square

```{r punnet, echo=FALSE, fig.align='center'}
tab <- table(expand.grid(c("A", "a"), c("A", "a")))
mosaicplot(tab, color = F, main = "Punnet square", 
           xlab = "Individual 1",
           ylab = "Individual 2")
text(.25, .7, expression("AA = p*p = p"^2))
text(.75, .7, expression("Aa = p*q = pq"))
text(.25, .25, expression("Aa = p*q = pq"))
text(.75, .25, expression("aa = q*q = q"^2))
```

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

-   We want to recreate a sample of 15 individuals starting from the gamete pool of our original population with $n = 15$ and $p \approx 0.633$ and $q \approx 0.367$

![](./genePoolHWA0.png){fig-align="center"}

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

```{r echo=TRUE, eval=FALSE}
p <- 0.633 
q <- 0.367  
sample(c("A", "a"), size = 1, prob = c(p, q))
```

![](./genePoolHWA1.png){fig-align="center"}

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

```{r echo=TRUE, eval=FALSE}
(sample(c("A", "a"), size = 1, prob = c(p, q)))
```

![](./genePoolHWA2.png){fig-align="center"}

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

![](./genePoolHWA16.png){fig-align="center"}

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

![](./genePoolHWA30.png){fig-align="center"}

-   We summarize the results in a table

| $n_{AA}$ | $n_{Aa}$ | $n_{aa}$ | $n$ |
|----------|----------|----------|-----|
| 7        | 7        | 1        | 15  |

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

-   The genotype and allele frequencies of the new generation are different from the previous one

```{r echo=TRUE, eval=TRUE}
p <- 0.633 
q <- 0.367  
newSample <- sample(c("A", "a"), size = 30,
                    prob = c(p, q),
                    replace = T)
table(newSample)
```

-   Once again, the genotype and allele frequencies of the new generation are different from the previous one, and it will likely be different most of the time we do this again

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

```{r echo=TRUE, eval=TRUE, fig.align='center'}
# This code has been modified from prof. Gratton
newSample <- t(sapply(1:10000, function(i){table(factor(sample(c("A","a"), size = 30, prob = c(p,q), replace = T),
                                               levels = c("A","a")))}))
hist(newSample[,"A"]/30, 
     xlim = c(0,1), xlab = "f(A)", 
     breaks = seq(0, 1, by= 0.1),
     col = "darkgoldenrod3", 
     border = NA, 
     main = "10,000 samples of size 30",
     cex.axis = 2, cex.main = 2, cex.lab = 2)
abline(v = 0.637, lty = 2, lwd = 2)
```

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

-   We notice that there is a oretty large variability around the original value of p = 0.633

-   In other words, the sampling error is quite large

```{r echo=FALSE, eval=TRUE, fig.align='center'}
# This code has been modified from prof. Gratton
newSample <- t(sapply(1:10000, function(i){table(factor(sample(c("A","a"), size = 30, prob = c(p,q), replace = T),
                                               levels = c("A","a")))}))
hist(newSample[,"A"]/30, 
     xlim = c(0,1), xlab = "f(A)", 
     breaks = seq(0, 1, by= 0.1),
     col = "darkgoldenrod3", 
     border = NA, 
     main = "10,000 samples of size 30",
     cex.axis = 2, cex.main = 2, cex.lab = 2)
abline(v = 0.637, lty = 2, lwd = 2)
```

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

```{r echo=TRUE, eval=TRUE, fig.align='center'}
newSample <- t(sapply(1:10000, function(i){table(factor(sample(c("A","a"), size = 100, prob = c(p,q), replace = T),
                                               levels = c("A","a")))}))
hist(newSample[,"A"]/100, 
     xlim = c(0,1), xlab = "f(A)", 
     breaks = seq(0, 1, by= 0.01),
     col = "darkgoldenrod3", 
     border = NA, 
     main = "10,000 samples of size 100",
     cex.axis = 2, cex.main = 2, cex.lab = 2)
abline(v = 0.637, lty = 2, lwd = 2)
```

------------------------------------------------------------------------

### Analyzing the Hardy-Weinberg model

![](./samplingError.png){fig-align="center"}

------------------------------------------------------------------------

### Summary of the Hardy-Weinberg model

-   The larger the sample dimension, the lower is the variation in allele frequencies with respect to the original value

-   If all the assumptions of the HW model are met, we should expect no variation at all in allele frequency, generation after generation

-   In natural population it is very hard to meet all the assumptions of the HW, in particular the one of infinite population size

-   The HW model is a very effective and simple way to "see" the effects of various evolutionary forces operating at the population level. It provides a "null model" against which compare what we see in our data

-   Once we found that something is different between what we expect from the HW model and what we see in nature at the population genetic level, we can start investigate the relative role of the various evolutionary forces

------------------------------------------------------------------------

### Testing a null hypothesis

-   A fundamental aspect of every scientific discipline is the capability to discern between alternative hypotheses. The general approach is to present a formal or null-hypothesis ($H_0$) and a statistical test to estimate the probability that it holds true
-   Such test usually implies the calculation of a P-value (*i.e.*, a probability distribution)
-   Lower P-values correspond to higher degree of certainty that the null is rejected and an alternative hypothesis ($H_1$) is preferred to explain the data
-   When $P=0.002$ it means that, if the null holds true, you expect to see a result as extreme or even more extreme than the one you have measured only 2 times out of 1000 experiment
-   The general threshold value ($\alpha$) is $P=0.05$, meaning that you have 5 chances in 100 of rejecting the null hypothesis when it is true

------------------------------------------------------------------------

### Excercise to test the HW proportions

```{r simBiallelicPop, echo=FALSE}
set.seed(3912)

pop_sim <- function(n, a, prob){
  alleles <- paste("A", 1:a, sep = "")
  pop <- vector(length = n)
  for(i in 1:n){
    pop[i] <- paste(sample(alleles, 2,
                           prob = prob,
                           replace = T), 
                    collapse = "")}
  pop <- regmatches(pop, gregexpr(".{2}", pop))
  
  pop2 <- vector()
  for(i in 1:length(pop)){
    temp <- sort(pop[[i]])
    temp <- str_c(temp, sep = "", collapse = "")
    pop2 <- c(pop2, temp)
  }
  
  pop <- pop2
  
  return(pop)
}

pop_test <- pop_sim(1647, 2, c(.75, .25))

pop_test_df <- as.data.frame(table(pop_test))
names(pop_test_df) <- c("Genotypes", "Number")
datatable(pop_test_df, filter = "none", rownames = F)
```

::: callout-important
# Problem

Calculate allele frequency, genotype frequency and expected genotype frequency.
:::

------------------------------------------------------------------------

-   Allele frequency:

$$
p = f(A) = \frac{2n_{11} + n_{12}}{2n} = \frac{(2*907)+616}{2*1647} =0.738
$$

$$
q = f(a) = \frac{2n_{22} + n_{12}}{2n} = \frac{(2*124)+616}{2*1647} =0.262
$$

. . .

-   Observed genotype frequency:

$$
f(AA) =\frac{n_{11}}{n}  = \frac{907}{1647}=0.551; \ \ \ f(Aa) =\frac{n_{12}}{n}  = \frac{616}{1647}=0.374
$$

$$
f(aa) =\frac{n_{22}}{n}  = \frac{124}{1647}=0.075
$$

------------------------------------------------------------------------

-   Expected genotype frequency:

$$
p^2 = f(AA)^2 = 0.738^2 = 0.545; \ \ \ 2pq = f(Aa) = 2*0.738*0.262=0.387
$$

$$
q^2 = f(aa)=0.262^2=0.068
$$

------------------------------------------------------------------------

## Is this difference significant?

$$
\chi^2=\sum\frac{(Observed-Expected)^2}{Expected}
$$

-   This methodology allows us to understand if the difference between observed and expected outcomes is greater than we would expect by chance

-   The empirical rule is to run the $\chi^2$ on the actual genotype count rather than the geenotype frequencies

. . .

```{r chiSq}
((907-897.615)^2/897.615)+((616-637.389)^2/637.389)+((124-111.996)^2/111.996)
```

-   The computed $\chi^2$ value is compared to a set of values calculated under the assumption that the null hypothesis we are testing is correct; our null hypothesis is that the population from which the samples was drawn is in HW proportions.

```{r echo=TRUE, eval=TRUE}
#| output-location: column-fragment
pchisq(q = 2.102498, df = 1, lower.tail = F)
```

------------------------------------------------------------------------

```{r chiSq2, echo=F}
chiTestVal <- seq(0, 10, by = 0.001)
plot(1-pchisq(chiTestVal, df = 1), chiTestVal, type = "l",
     main = "Chi-Square distribution",
     ylab = "Test Statistic Value",
     xlab = "P-value", lwd = 2)
lines(1-pchisq(chiTestVal, df = 2), chiTestVal, type = "l",
      lwd = 2, col = "blue")
lines(1-pchisq(chiTestVal, df = 3), chiTestVal, type = "l",
      lwd = 2, col = "green")
lines(1-pchisq(chiTestVal, df = 4), chiTestVal, type = "l",
      lwd = 2, col = "brown")
lines(1-pchisq(chiTestVal, df = 5), chiTestVal, type = "l",
      lwd = 2, col = "deeppink")
abline(v=0.05, col = "red", lty = 2, lwd = 2)
legend("topright", legend = c("df = 1", "df = 2", "df = 3", "df = 4", "df = 5"), 
       col = c("black", "blue", "green", "brown", "deeppink"), lty = 1)
```

------------------------------------------------------------------------

### Degrees of freedom

-   The number of degrees of freedom is the number of values in the final calculation of a statistic that are free to vary [@Wiki_DoF_2023]
-   If a car dealer is giving away 15 random cars to the first 15 customers, the first 14 that show up at the car dealer will have the freedom to pick and choose the car they want. The $15^{th}$ will not be able to do so as only one car will be remaining. Similarly, if you calculated the mean of a sample of 15 numbers, the first 14 numbers can vary freely, but the value of the $15^{th}$ number is determined as the value needed to achieve the given sample mean!
-   Degrees of freedom for tests for Hardy--Weinberg proportions are estimated according to: $df=\# genotypes − \# alleles$. This is because the number of genotypes in a population can not vary freely, but is bound to the number of alleles present in that population

------------------------------------------------------------------------

```{r pvalxsquplot, echo=F}

par(mfrow=c(2,2))
curve(dchisq(x, df = 1), from = 0, to = 10, ylim = c(0, .5),
      main = "",
      ylab = "Prob. dens. function",
      xlab = "", lwd = 1)
curve(dchisq(x, df = 2), from = 0, to = 20, ylim = c(0, .5), add = T, lwd = 1, lty = 2)
curve(dchisq(x, df = 3), from = 0, to = 20, ylim = c(0, .5), add = T, lwd = 1, lty = 3)
curve(dchisq(x, df = 4), from = 0, to = 20, ylim = c(0, .5), add = T, lwd = 1, lty = 4)
curve(dchisq(x, df = 5), from = 0, to = 20, ylim = c(0, .5), add = T, lwd = 1, lty = 5)
legend("topright", legend = c("df = 1", "df = 2", "df = 3", "df = 4", "df = 5"), 
      lty = c(1,2,3,4,5), lwd = 1, cex = .7, pt.lwd = .2)

curve(dchisq(x, df = 1), from = 0, to = 10, ylim = c(0, .5),
      main = "",
      ylab = "",
      xlab = "", lwd = 2)
#create vector of x values
x_vector <- seq(qchisq(p=.95, df=1), 10, by = 0.01)
x2_vector <- seq(0.01, qchisq(p=.95, df=1), by = 0.01)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, df = 1)
p2_vector <- dchisq(x2_vector, df = 1)
#fill in portion of the density plot from 0 to 10
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
        col = adjustcolor('red', alpha=0.8), border = NA)
polygon(c(x2_vector, rev(x2_vector)), c(p2_vector, rep(0, length(p2_vector))),
        col = adjustcolor('green', alpha=0.8), border = NA)
legend("topright", legend = c("p <= 0.05", "p > 0.05"), fill = c("red", "green"), title = "df = 1")

curve(dchisq(x, df = 2), from = 0, to = 10, ylim = c(0, .5),
      main = "",
      ylab = "Prob. dens. function",
      xlab = "Test statistic value", lwd = 2)
#create vector of x values
x_vector <- seq(qchisq(p=.95, df=2), 10, by = 0.01)
x2_vector <- seq(0.01, qchisq(p=.95, df=2), by = 0.01)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, df = 2)
p2_vector <- dchisq(x2_vector, df = 2)
#fill in portion of the density plot from 0 to 10
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
        col = adjustcolor('red', alpha=0.8), border = NA)
polygon(c(x2_vector, rev(x2_vector)), c(p2_vector, rep(0, length(p2_vector))),
        col = adjustcolor('green', alpha=0.8), border = NA)
legend("topright", legend = c("p <= 0.05", "p > 0.05"), fill = c("red", "green"), title = "df = 2")



curve(dchisq(x, df = 4), from = 0, to = 10, ylim = c(0, .5),
      main = "",
      ylab = "",
      xlab = "Test statistic value", lwd = 2)
#create vector of x values
x_vector <- seq(qchisq(p=.95, df=4), 10, by = 0.01)
x2_vector <- seq(0.01, qchisq(p=.95, df=4), by = 0.01)
#create vector of chi-square density values
p_vector <- dchisq(x_vector, df = 4)
p2_vector <- dchisq(x2_vector, df = 4)
#fill in portion of the density plot from 0 to 10
polygon(c(x_vector, rev(x_vector)), c(p_vector, rep(0, length(p_vector))),
        col = adjustcolor('red', alpha=0.8), border = NA)
polygon(c(x2_vector, rev(x2_vector)), c(p2_vector, rep(0, length(p2_vector))),
        col = adjustcolor('green', alpha=0.8), border = NA)
legend("topright", legend = c("p <= 0.05", "p > 0.05"), fill = c("red", "green"), title = "df = 4")

```

## References
